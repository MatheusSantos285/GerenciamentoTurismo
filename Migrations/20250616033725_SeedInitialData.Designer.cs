// <auto-generated />
using System;
using GerenciamentoTurismo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciamentoTurismo.Migrations
{
    [DbContext(typeof(AgenciaTurismoContext))]
    [Migration("20250616033725_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("GerenciamentoTurismo.Models.CidadeDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PaisDestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaisDestinoId");

                    b.ToTable("CidadesDestino");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Nome = "Rio de Janeiro",
                            PaisDestinoId = 1
                        },
                        new
                        {
                            Id = 102,
                            Nome = "Salvador",
                            PaisDestinoId = 1
                        },
                        new
                        {
                            Id = 201,
                            Nome = "Roma",
                            PaisDestinoId = 2
                        },
                        new
                        {
                            Id = 202,
                            Nome = "Veneza",
                            PaisDestinoId = 2
                        },
                        new
                        {
                            Id = 301,
                            Nome = "Paris",
                            PaisDestinoId = 3
                        },
                        new
                        {
                            Id = 401,
                            Nome = "Nova York",
                            PaisDestinoId = 4
                        });
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.PacoteDestino", b =>
                {
                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CidadeDestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PacoteTuristicoId", "CidadeDestinoId");

                    b.HasIndex("CidadeDestinoId");

                    b.ToTable("PacotesDestinos");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.PaisDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("PaisesDestino");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Itália"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "França"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Estados Unidos"
                        });
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.CidadeDestino", b =>
                {
                    b.HasOne("GerenciamentoTurismo.Models.PaisDestino", "Pais")
                        .WithMany("Cidades")
                        .HasForeignKey("PaisDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.PacoteDestino", b =>
                {
                    b.HasOne("GerenciamentoTurismo.Models.CidadeDestino", "CidadeDestino")
                        .WithMany("PacoteDestinos")
                        .HasForeignKey("CidadeDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoTurismo.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("PacoteDestinos")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CidadeDestino");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.Reserva", b =>
                {
                    b.HasOne("GerenciamentoTurismo.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoTurismo.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.CidadeDestino", b =>
                {
                    b.Navigation("PacoteDestinos");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.PacoteTuristico", b =>
                {
                    b.Navigation("PacoteDestinos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("GerenciamentoTurismo.Models.PaisDestino", b =>
                {
                    b.Navigation("Cidades");
                });
#pragma warning restore 612, 618
        }
    }
}
